# API Gateway Configuration (application.yml)
server:
  port: 8080
  error:
    include-message: always
    include-binding-errors: always

spring:
  application:
    name: api-gateway
  
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://localhost:9092/realms/dmh
          jwk-set-uri: http://localhost:9092/realms/dmh/protocol/openid-connect/certs
      client:
        provider:
          keycloak:
            issuer-uri: http://localhost:9092/realms/dmh
            authorization-uri: http://localhost:9092/realms/dmh/protocol/openid-connect/auth
            user-info-uri: http://localhost:9092/realms/dmh/protocol/openid-connect/userinfo
            jwk-set-uri: http://localhost:9092/realms/dmh/protocol/openid-connect/certs
            token-uri: http://localhost:9092/realms/dmh/protocol/openid-connect/token
        registration:
          keycloak:
            client-id: gateway-client
            client-secret: ${KEYCLOAK_CLIENT_SECRET}
            scope: openid,profile,email
            authorization-grant-type: authorization_code
            redirect-uri: "{baseUrl}/login/oauth2/code/keycloak"
  
  cloud:
    gateway:
      default-filters:
        - DedupeResponseHeader=Access-Control-Allow-Origin
        - AddResponseHeader=Access-Control-Allow-Credentials, true
      discovery:
        locator:
          enabled: true
          lower-case-service-id: true
      routes:
        # Auth Service Routes
        - id: auth-service
          uri: lb://AUTH-SERVICE
          predicates:
            - Path=/api/auth/**
          filters:
            - RewritePath=/api/(?<segment>.*), /$\{segment}
            - name: CircuitBreaker
              args:
                name: authCircuitBreaker
                fallbackUri: forward:/fallback/auth
            - name: Retry
              args:
                retries: 3
                methods: GET,POST
                backoff:
                  firstBackoff: 50ms
                  maxBackoff: 500ms
        
        # User Service Routes
        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/api/users/**
          filters:
            - RewritePath=/api/(?<segment>.*), /$\{segment}
            - name: CircuitBreaker
              args:
                name: userCircuitBreaker
                fallbackUri: forward:/fallback/users
            - name: Retry
              args:
                retries: 3
                methods: GET,POST,PUT
                backoff:
                  firstBackoff: 50ms
                  maxBackoff: 500ms
        
        # Account Service Routes
        - id: account-service
          uri: lb://ACCOUNT-SERVICE
          predicates:
            - Path=/api/accounts/**
          filters:
            - RewritePath=/api/(?<segment>.*), /$\{segment}
            - name: CircuitBreaker
              args:
                name: accountCircuitBreaker
                fallbackUri: forward:/fallback/accounts
            - name: Retry
              args:
                retries: 3
                methods: GET,POST,PUT
                backoff:
                  firstBackoff: 50ms
                  maxBackoff: 500ms
        
        # Transaction Service Routes
        - id: transaction-service
          uri: lb://TRANSACTION-SERVICE
          predicates:
            - Path=/api/accounts/{accountId}/transactions/**
          filters:
            - RewritePath=/api/(?<segment>.*), /$\{segment}
            - name: CircuitBreaker
              args:
                name: transactionCircuitBreaker
                fallbackUri: forward:/fallback/transactions
            - name: Retry
              args:
                retries: 3
                methods: GET,POST
                backoff:
                  firstBackoff: 50ms
                  maxBackoff: 500ms
        
        # Card Service Routes
        - id: card-service
          uri: lb://CARD-SERVICE
          predicates:
            - Path=/api/accounts/{accountId}/cards/**
          filters:
            - RewritePath=/api/(?<segment>.*), /$\{segment}
            - name: CircuitBreaker
              args:
                name: cardCircuitBreaker
                fallbackUri: forward:/fallback/cards
            - name: Retry
              args:
                retries: 3
                methods: GET,POST,PUT,DELETE
                backoff:
                  firstBackoff: 50ms
                  maxBackoff: 500ms

resilience4j:
  circuitbreaker:
    instances:
      auth:
        slidingWindowSize: 10
        minimumNumberOfCalls: 5
        failureRateThreshold: 50
        waitDurationInOpenState: 5s
        permittedNumberOfCallsInHalfOpenState: 3
      user:
        slidingWindowSize: 10
        minimumNumberOfCalls: 5
        failureRateThreshold: 50
        waitDurationInOpenState: 5s
        permittedNumberOfCallsInHalfOpenState: 3
      account:
        slidingWindowSize: 10
        minimumNumberOfCalls: 5
        failureRateThreshold: 50
        waitDurationInOpenState: 5s
        permittedNumberOfCallsInHalfOpenState: 3
      transaction:
        slidingWindowSize: 10
        minimumNumberOfCalls: 5
        failureRateThreshold: 50
        waitDurationInOpenState: 5s
        permittedNumberOfCallsInHalfOpenState: 3
      card:
        slidingWindowSize: 10
        minimumNumberOfCalls: 5
        failureRateThreshold: 50
        waitDurationInOpenState: 5s
        permittedNumberOfCallsInHalfOpenState: 3

eureka:
  client:
    serviceUrl:
      defaultZone: http://localhost:8761/eureka/
    register-with-eureka: true
    fetch-registry: true
  instance:
    preferIpAddress: true
    hostname: localhost

management:
  endpoints:
    web:
      exposure:
        include: health,metrics,gateway,circuitbreakers
  endpoint:
    health:
      show-details: always
    gateway:
      enabled: true
  health:
    circuitbreakers:
      enabled: true

logging:
  level:
    root: INFO
    org.springframework.cloud.gateway: DEBUG
    org.springframework.security: DEBUG
    org.springframework.web: DEBUG
    reactor.netty: DEBUG