services:
  # Databases
  account-db:
    image: postgres:latest
    container_name: dmh_account_db_v1
    environment:
      POSTGRES_DB: account_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - account_data:/var/lib/postgresql/data
    networks:
      - dmh_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  user-db:
    image: postgres:latest
    container_name: dmh_user_db_v1
    environment:
      POSTGRES_DB: user_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5430:5432"
    volumes:
      - user_data:/var/lib/postgresql/data
    networks:
      - dmh_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  transaction-db:
    image: postgres:latest
    container_name: dmh_transaction_db_v1
    environment:
      POSTGRES_DB: transaction_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5436:5432"
    volumes:
      - transaction_data:/var/lib/postgresql/data
    networks:
      - dmh_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  card-db:
    image: postgres:latest
    container_name: dmh_card_db_v1
    environment:
      POSTGRES_DB: card_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5438:5432"
    volumes:
      - card_data:/var/lib/postgresql/data
    networks:
      - dmh_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  auth-db:
    image: mysql:latest
    container_name: dmh_auth_db_v1
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: auth_db
      MYSQL_USER: auth
      MYSQL_PASSWORD: auth
    ports:
      - "3306:3306"
    volumes:
      - auth_data:/var/lib/mysql
    networks:
      - dmh_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "auth", "-pauth"]
      interval: 10s
      timeout: 5s
      retries: 5

  keycloak-db:
    image: postgres:latest
    container_name: dmh_keycloak_db_v1
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: password
    ports:
      - "5433:5432"
    volumes:
      - keycloak_data:/var/lib/postgresql/data
    networks:
      - dmh_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U keycloak"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Keycloak
  keycloak:
    image: quay.io/keycloak/keycloak:latest
    container_name: dmh_keycloak_v1
    environment:
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://keycloak-db:5432/keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: password
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_HOSTNAME: localhost
    command:
      - start-dev
      - --import-realm
    volumes:
      - ./realm-export.json:/opt/keycloak/data/import/realm.json
    ports:
      - "9092:8080"
    depends_on:
      keycloak-db:
        condition: service_healthy
    networks:
      - dmh_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health/ready"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Microservices
  config-server:
    image: atuhome/config-server:latest
    container_name: dmh_config_server_v1
    ports:
      - "8888:8888"
    networks:
      - dmh_network
    environment:
      - SERVER_PORT_CONFIG_SERVER=8888
      - SPRING_APPLICATION_NAME_CONFIG_SERVER=config-server
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_CLOUD_CONFIG_SERVER_GIT_URI=${CONFIG_REPO_URL:-https://github.com/yourusername/config-repo.git}
      - EUREKA_REGISTER_WITH_EUREKA=true
      - EUREKA_FETCH_REGISTRY=true
      - EUREKA_SERVICE_URL_DEFAULT_ZONE=http://eureka-server:8761/eureka/
      - MANAGEMENT_ENDPOINT_ENV_POST_ENABLED=true
      - EUREKA_INSTANCE_PREFER_IP_ADDRESS=true
      - SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER_URI=http://keycloak:8080/realms/dmh
      - SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_JWK_SET_URI=http://keycloak:8080/realms/dmh/protocol/openid-connect/certs
    depends_on:
      keycloak:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:8888/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  eureka-server:
    image: atuhome/eureka-server:latest
    container_name: dmh_eureka_server_v1
    ports:
      - "8761:8761"
    networks:
      - dmh_network
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SERVER_PORT=8761
      - EUREKA_INSTANCE_HOSTNAME=eureka-server
      - EUREKA_CLIENT_REGISTERWITHEUREKA=false
      - EUREKA_CLIENT_FETCHREGISTRY=false
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka/
      - EUREKA_INSTANCE_PREFER_IP_ADDRESS=true
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:8761/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  api-gateway:
    image: atuhome/api-gateway:latest
    container_name: dmh_api_gateway_v1
    ports:
      - "8090:8090"
    networks:
      - dmh_network
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka/
      - SPRING_CLOUD_CONFIG_URI=http://config-server:8888
      - EUREKA_INSTANCE_PREFER_IP_ADDRESS=true
    depends_on:
      eureka-server:
        condition: service_healthy
      config-server:
        condition: service_healthy

  auth-service:
    image: atuhome/auth-service:latest
    container_name: dmh_auth_service_v1
    networks:
      - dmh_network
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka/
      - SPRING_CLOUD_CONFIG_URI=http://config-server:8888
      - SPRING_DATASOURCE_URL=jdbc:mysql://auth-db:3306/auth_db
      - SPRING_DATASOURCE_USERNAME=auth
      - SPRING_DATASOURCE_PASSWORD=auth
      - EUREKA_INSTANCE_PREFER_IP_ADDRESS=true
    depends_on:
      auth-db:
        condition: service_healthy
      eureka-server:
        condition: service_healthy
      config-server:
        condition: service_healthy

  user-service:
    image: atuhome/user-service:latest
    container_name: dmh_user_service_v1
    networks:
      - dmh_network
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka/
      - SPRING_CLOUD_CONFIG_URI=http://config-server:8888
      - SPRING_DATASOURCE_URL=jdbc:postgresql://user-db:5432/user_db
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - EUREKA_INSTANCE_PREFER_IP_ADDRESS=true
    depends_on:
      user-db:
        condition: service_healthy
      eureka-server:
        condition: service_healthy
      config-server:
        condition: service_healthy

  account-service:
    image: atuhome/account-service:latest
    container_name: dmh_account_service_v1
    networks:
      - dmh_network
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka/
      - SPRING_CLOUD_CONFIG_URI=http://config-server:8888
      - SPRING_DATASOURCE_URL=jdbc:postgresql://account-db:5432/account_db
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - EUREKA_INSTANCE_PREFER_IP_ADDRESS=true
    depends_on:
      account-db:
        condition: service_healthy
      eureka-server:
        condition: service_healthy
      config-server:
        condition: service_healthy

  transaction-service:
    image: atuhome/transaction-service:latest
    container_name: dmh_transaction_service_v1
    networks:
      - dmh_network
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka/
      - SPRING_CLOUD_CONFIG_URI=http://config-server:8888
      - SPRING_DATASOURCE_URL=jdbc:postgresql://transaction-db:5432/transaction_db
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - EUREKA_INSTANCE_PREFER_IP_ADDRESS=true
    depends_on:
      transaction-db:
        condition: service_healthy
      eureka-server:
        condition: service_healthy
      config-server:
        condition: service_healthy

  card-service:
    image: atuhome/card-service:latest
    container_name: dmh_card_service_v1
    networks:
      - dmh_network
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka/
      - SPRING_CLOUD_CONFIG_URI=http://config-server:8888
      - SPRING_DATASOURCE_URL=jdbc:postgresql://card-db:5432/card_db
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - EUREKA_INSTANCE_PREFER_IP_ADDRESS=true
    depends_on:
      card-db:
        condition: service_healthy
      eureka-server:
        condition: service_healthy
      config-server:
        condition: service_healthy

networks:
  dmh_network:
    driver: bridge

volumes:
  account_data:
  user_data:
  transaction_data:
  card_data:
  auth_data:
  keycloak_data: